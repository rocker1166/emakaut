/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/axChPVkoUqa
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Rubik } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"
import Link from "next/link"
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from "@/components/ui/dropdown-menu"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card"
import Filter2 from "./filter2"
import { useState } from "react"
import { useQuery } from "convex/react";
import { api } from "@/convex/_generated/api"
import { XIcon, MenuIcon } from "lucide-react"
export function Dashboard() {
  const res = useQuery(api.content.get);
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  return (
    <div className="flex flex-col min-h-[100dvh]">
     
     <header className="bg-black text-white px-4 lg:px-6 h-14 flex items-center shadow-md opacity-95 font-bold text-2xl fixed top-0 w-full z-10">
        <Link href="/" className="flex items-center justify-center" prefetch={false}>
          <MountainIcon className="h-6 w-6 mr-2" />
          <span>Academy</span>
        </Link>
        <nav className="ml-auto hidden md:flex gap-4 sm:gap-6">
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Courses
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            About
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Instructors
          </Link>
          <Link href="#" className="text-sm font-medium hover:underline" prefetch={false}>
            Contact
          </Link>
        </nav>
        <button
          className="md:hidden ml-auto focus:outline-none"
          onClick={() => setIsMenuOpen(!isMenuOpen)}
        >
          {isMenuOpen ? (
            <XIcon className="h-6 w-6" />
          ) : (
            <MenuIcon className="h-6 w-6" />
          )}
        </button>
      </header>
      {isMenuOpen && (
        <nav className="bg-black relative backdrop-blur-md text-white fixed top-14 left-0 w-full flex flex-col items-center md:hidden">
          <Link href="#" className="py-2 text-sm font-medium hover:underline" prefetch={false}>
            Courses
          </Link>
          <Link href="#" className="py-2 text-sm font-medium hover:underline" prefetch={false}>
            About
          </Link>
          <Link href="#" className="py-2 text-sm font-medium hover:underline" prefetch={false}>
            Instructors
          </Link>
          <Link href="#" className="py-2 text-sm font-medium hover:underline" prefetch={false}>
            Contact
          </Link>
        </nav>
      )}

      
      <div className=" m-16 ">
     <Filter2 />
     </div>



      
    <div className=" items-center flex min-h-screen flex-col ">
      <main className=" ">
        
         

            




          


            <div className="grid  gap-7    sm:grid-cols-6 md:gap-3  justify-between content-between ">
      {res?.map((data:any, index:any) => (
        <Link
          key={index}
          href={data.url}
          className="block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700"
        >
          <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
            {data.title}
          </h5>
          <p className="font-normal text-gray-700 dark:text-gray-400">
            {data.description}
          </p>
          <span className="bg-red-100 text-red-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-red-900 dark:text-red-300">
            {data.tag[1]}
          </span>
        </Link>
      ))} 
            </div>
           
          
       
      </main>
    </div>
      <footer className="flex flex-col gap-2 sm:flex-row py-6 w-full shrink-0 items-center px-4 md:px-6 border-t bg-slate-100 text-black">
        <p className="text-xs text-muted-foreground text-black font-bold">&copy; 2024 Emakaut. All rights reserved.</p>
        <nav className="sm:ml-auto flex gap-4 sm:gap-6" />
      </footer>
    </div>
  )
}

function CalendarIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M8 2v4" />
      <path d="M16 2v4" />
      <rect width="18" height="18" x="3" y="4" rx="2" />
      <path d="M3 10h18" />
    </svg>
  )
}


function ChevronDownIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m6 9 6 6 6-6" />
    </svg>
  )
}


function MountainIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}




